// Code generated by protoc-gen-go.
// source: device.proto
// DO NOT EDIT!

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Device struct {
	ID               []byte        `protobuf:"bytes,1,req,name=ID" json:"ID,omitempty"`
	Owner            []byte        `protobuf:"bytes,2,req,name=Owner" json:"Owner,omitempty"`
	Name             *string       `protobuf:"bytes,3,req,name=Name" json:"Name,omitempty"`
	Components       []*Components `protobuf:"bytes,4,rep,name=Components" json:"Components,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Device) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *Device) GetOwner() []byte {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Device) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Device) GetComponents() []*Components {
	if m != nil {
		return m.Components
	}
	return nil
}

func init() {
	proto.RegisterType((*Device)(nil), "message.Device")
}

func init() { proto.RegisterFile("device.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x49, 0x2d, 0xcb,
	0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c,
	0x4f, 0x95, 0x12, 0x48, 0xce, 0xcf, 0x2d, 0xc8, 0xcf, 0x4b, 0xcd, 0x2b, 0x29, 0x86, 0x48, 0x29,
	0x95, 0x73, 0xb1, 0xb9, 0x80, 0x95, 0x0a, 0xf1, 0x71, 0x31, 0x79, 0xba, 0x48, 0x30, 0x2a, 0x30,
	0x69, 0xf0, 0x04, 0x31, 0x79, 0xba, 0x08, 0x89, 0x70, 0xb1, 0xfa, 0x97, 0xe7, 0xa5, 0x16, 0x49,
	0x30, 0x81, 0x85, 0x20, 0x1c, 0x21, 0x21, 0x2e, 0x16, 0xbf, 0xc4, 0xdc, 0x54, 0x09, 0x66, 0x05,
	0x26, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0xc8, 0x98, 0x8b, 0xcb, 0x19, 0x6e, 0xae, 0x04, 0x8b, 0x02,
	0xb3, 0x06, 0xb7, 0x91, 0xb0, 0x1e, 0xd4, 0x4e, 0x3d, 0x84, 0x54, 0x10, 0x92, 0x32, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x0f, 0x2a, 0xfb, 0x25, 0xa2, 0x00, 0x00, 0x00,
}
