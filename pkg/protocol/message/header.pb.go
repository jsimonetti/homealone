// Code generated by protoc-gen-go.
// source: header.proto
// DO NOT EDIT!

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Header is the header of a message. It contains the message type and
// the source of the message.
type Header struct {
	Type             *Type   `protobuf:"varint,1,req,name=Type,json=type,enum=message.Type" json:"Type,omitempty"`
	From             *string `protobuf:"bytes,2,req,name=From,json=from" json:"From,omitempty"`
	To               *string `protobuf:"bytes,3,opt,name=To,json=to" json:"To,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Header) GetType() Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Type_discover
}

func (m *Header) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *Header) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

func init() {
	proto.RegisterType((*Header)(nil), "message.Header")
}

func init() { proto.RegisterFile("header.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x48, 0x4d, 0x4c,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c,
	0x4f, 0x95, 0xe2, 0x2a, 0xa9, 0x2c, 0x48, 0x85, 0x08, 0x2a, 0xf9, 0x73, 0xb1, 0x79, 0x80, 0x15,
	0x09, 0x29, 0x72, 0xb1, 0x84, 0x54, 0x16, 0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x69, 0xf0, 0x19, 0xf1,
	0xea, 0x41, 0x55, 0xeb, 0x81, 0x04, 0x83, 0x58, 0x40, 0x5a, 0x84, 0x84, 0xb8, 0x58, 0xdc, 0x8a,
	0xf2, 0x73, 0x25, 0x98, 0x14, 0x98, 0x34, 0x38, 0x83, 0x58, 0xd2, 0x8a, 0xf2, 0x73, 0x85, 0xf8,
	0xb8, 0x98, 0x42, 0xf2, 0x25, 0x98, 0x15, 0x18, 0x35, 0x38, 0x83, 0x98, 0x4a, 0xf2, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x08, 0x75, 0x9c, 0x9f, 0x74, 0x00, 0x00, 0x00,
}
