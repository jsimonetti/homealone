// Code generated by protoc-gen-go.
// source: inventory.proto
// DO NOT EDIT!

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	inventory.proto
	device.proto
	components.proto
	driver.proto

It has these top-level messages:
	InventoryRequest
	InventoryResponse
	RegisterRequest
	RegisterResponse
	Device
	Devices
	Component
	Stat
	Toggle
	Slider
	Rotary
	DriverCommand
	CommandResult
*/
package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InventoryRequest struct {
}

func (m *InventoryRequest) Reset()                    { *m = InventoryRequest{} }
func (m *InventoryRequest) String() string            { return proto.CompactTextString(m) }
func (*InventoryRequest) ProtoMessage()               {}
func (*InventoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InventoryResponse struct {
	Devices map[string]*Devices `protobuf:"bytes,1,rep,name=Devices,json=devices" json:"Devices,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *InventoryResponse) Reset()                    { *m = InventoryResponse{} }
func (m *InventoryResponse) String() string            { return proto.CompactTextString(m) }
func (*InventoryResponse) ProtoMessage()               {}
func (*InventoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InventoryResponse) GetDevices() map[string]*Devices {
	if m != nil {
		return m.Devices
	}
	return nil
}

type RegisterRequest struct {
	Devices []*Device `protobuf:"bytes,2,rep,name=Devices,json=devices" json:"Devices,omitempty"`
}

func (m *RegisterRequest) Reset()                    { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()               {}
func (*RegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegisterRequest) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type RegisterResponse struct {
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*InventoryRequest)(nil), "message.InventoryRequest")
	proto.RegisterType((*InventoryResponse)(nil), "message.InventoryResponse")
	proto.RegisterType((*RegisterRequest)(nil), "message.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "message.RegisterResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Inventory service

type InventoryClient interface {
	List(ctx context.Context, in *InventoryRequest, opts ...client.CallOption) (*InventoryResponse, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*RegisterResponse, error)
}

type inventoryClient struct {
	c           client.Client
	serviceName string
}

func NewInventoryClient(serviceName string, c client.Client) InventoryClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "message"
	}
	return &inventoryClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *inventoryClient) List(ctx context.Context, in *InventoryRequest, opts ...client.CallOption) (*InventoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Inventory.List", in)
	out := new(InventoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inventoryClient) Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*RegisterResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Inventory.Register", in)
	out := new(RegisterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Inventory service

type InventoryHandler interface {
	List(context.Context, *InventoryRequest, *InventoryResponse) error
	Register(context.Context, *RegisterRequest, *RegisterResponse) error
}

func RegisterInventoryHandler(s server.Server, hdlr InventoryHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Inventory{hdlr}, opts...))
}

type Inventory struct {
	InventoryHandler
}

func (h *Inventory) List(ctx context.Context, in *InventoryRequest, out *InventoryResponse) error {
	return h.InventoryHandler.List(ctx, in, out)
}

func (h *Inventory) Register(ctx context.Context, in *RegisterRequest, out *RegisterResponse) error {
	return h.InventoryHandler.Register(ctx, in, out)
}

func init() { proto.RegisterFile("inventory.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xcc, 0x2b, 0x4b,
	0xcd, 0x2b, 0xc9, 0x2f, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf, 0x4d, 0x2d,
	0x2e, 0x4e, 0x4c, 0x4f, 0x95, 0xe2, 0x49, 0x49, 0x2d, 0xcb, 0x4c, 0x4e, 0x85, 0x08, 0x2b, 0x09,
	0x71, 0x09, 0x78, 0xc2, 0x54, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0x2d, 0x61, 0xe4,
	0x12, 0x44, 0x12, 0x2c, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x72, 0xe4, 0x62, 0x77, 0x01, 0xeb,
	0x2c, 0x96, 0x60, 0x54, 0x60, 0xd6, 0xe0, 0x36, 0x52, 0xd7, 0x83, 0x1a, 0xa9, 0x87, 0xa1, 0x58,
	0x0f, 0xaa, 0xd2, 0x35, 0xaf, 0xa4, 0xa8, 0x32, 0x88, 0x1d, 0x62, 0x63, 0xb1, 0x94, 0x0f, 0x17,
	0x0f, 0xb2, 0x84, 0x90, 0x00, 0x17, 0x73, 0x76, 0x6a, 0xa5, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67,
	0x10, 0x88, 0x29, 0xa4, 0xc6, 0xc5, 0x5a, 0x96, 0x98, 0x53, 0x9a, 0x2a, 0xc1, 0xa4, 0xc0, 0xa8,
	0xc1, 0x6d, 0x24, 0x00, 0xb7, 0x02, 0xaa, 0x2f, 0x08, 0x22, 0x6d, 0xc5, 0x64, 0xc1, 0xa8, 0x64,
	0xc3, 0xc5, 0x1f, 0x94, 0x9a, 0x9e, 0x59, 0x5c, 0x92, 0x5a, 0x04, 0x75, 0xb9, 0x90, 0x26, 0xc2,
	0x8d, 0x4c, 0x60, 0x37, 0xf2, 0xa3, 0x19, 0x00, 0x77, 0x0b, 0xc8, 0xe3, 0x08, 0xdd, 0x10, 0x57,
	0x1b, 0xf5, 0x33, 0x72, 0x71, 0xc2, 0xfd, 0x22, 0x64, 0xcf, 0xc5, 0xe2, 0x93, 0x59, 0x5c, 0x22,
	0x24, 0x89, 0xcd, 0x9f, 0x60, 0xfb, 0xa4, 0xa4, 0x70, 0x07, 0x81, 0x12, 0x83, 0x90, 0x23, 0x17,
	0x07, 0xcc, 0x0a, 0x21, 0x09, 0xb8, 0x4a, 0x34, 0x37, 0x4b, 0x49, 0x62, 0x91, 0x81, 0x19, 0x91,
	0xc4, 0x06, 0x8e, 0x25, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x15, 0x42, 0x92, 0xcf,
	0x01, 0x00, 0x00,
}
